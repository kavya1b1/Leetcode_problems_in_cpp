class Solution {
public:
    int findNthDigit(int n) {
        long long digitLength = 1;
        long long count = 9;
        long long start = 1;

        // Step 1: Find the range in which the nth digit lies
        while (n > digitLength * count) {
            n -= digitLength * count;
            digitLength++;
            count *= 10;
            start *= 10;
        }

        // Step 2: Find the actual number that contains the nth digit
        start += (n - 1) / digitLength;

        // Step 3: Convert number to string to get the digit
        string numStr = to_string(start);
        return numStr[(n - 1) % digitLength] - '0';
    }
};
